name: Integration Tests

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build-vue-mess-detector:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Build package
        run: yarn build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vue-mess-detector
          path: |
            ./package.json
            ./dist
          retention-days: 1

  test-vue-mess-detector:
    runs-on: ${{ matrix.platform }}
    needs: build-vue-mess-detector

    strategy:
      matrix:
        platform: [ 'macos-latest', 'ubuntu-latest', 'windows-latest' ]
        package-manager: [ npm, yarn, pnpm, bun ]

    name: Testing with ${{ matrix.package-manager }} on ${{ matrix.platform }}
    steps:
      - name: Create package directory
        run: mkdir ./package

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: vue-mess-detector
          path: ./package

      - name: Create test-repo directory
        run: mkdir ./test-repo

      - if: matrix.package-manager == 'bun'
        name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - if: matrix.package-manager == 'pnpm'
        name: Check PNPM
        uses: pnpm/action-setup@v4
        with:
          version: '9.9.0'

      - if: matrix.package-manager == 'yarn'
        name: Check Yarn
        run: npm install -g yarn

      - if: matrix.package-manager == 'bun'
        name: Check Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.1.26'

      - if: runner.os != 'Windows'
        name: Create and Run Vue Mess Detector (Linux/Mac)
        working-directory: ./test-repo
        run: |
          if [ "${{ matrix.package-manager }}" == "pnpm" ]; then
            yes "my-package" | head -n 1 | pnpm create vue@latest . --default --typescript
            pnpm add file:../package/ -D
            pnpm install
            pnpm vue-mess-detector analyze
          elif [ "${{ matrix.package-manager }}" == "yarn" ]; then
            yes "my-package" | head -n 1 | yarn --cwd . create vue . --default --typescript
            yarn add file:../package/ -D
            yarn install
            yarn vue-mess-detector analyze
          elif [ "${{ matrix.package-manager }}" == "bun" ]; then
            yes "my-package" | head -n 1 | bun create vue . --default --typescript --cwd=. --ignore-scripts
            bun add file:../package/ --dev
            bun install --ignore-scripts
            bunx vue-mess-detector analyze
          else
            yes "my-package" | head -n 1 | npm create vue@latest -- . --default --typescript
            npm install file:../package/ --save-dev
            npm install
            npx vue-mess-detector analyze
          fi

      - if: runner.os == 'Windows'
        name: Create and Run Vue Mess Detector (Windows)
        working-directory: ./test-repo
        run: |
          if ($Env:matrix_package_manager -eq 'pnpm') {
            echo "my-package" | pnpm create vue@latest . --default --typescript
            pnpm add file:../package/ -D
            pnpm install
            pnpm vue-mess-detector analyze
          } elseif ($Env:matrix_package_manager -eq 'yarn') {
            echo "my-package" | yarn create vue . --default --typescript
            yarn add file:../package/ -D
            yarn install
            yarn vue-mess-detector analyze
          } elseif ($Env:matrix_package_manager -eq 'bun') {
            echo "my-package" | bun create vue . --default --typescript --ignore-scripts
            bun add file:../package/ --dev
            bun install --ignore-scripts
            bunx vue-mess-detector analyze
          } else {
            echo "my-package" | npm create vue@latest -- . --default --typescript
            npm install file:../package/ --save-dev
            npm install
            npx vue-mess-detector analyze
          }
